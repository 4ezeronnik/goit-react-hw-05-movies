{"version":3,"file":"static/js/278.295cb6b9.chunk.js","mappings":"uMAwEA,UAnEe,WAAO,IAAD,EACbA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAGA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAb,UAAiB,SAAjB,EAA4B,IAkC7C,OAtBFC,EAAAA,EAAAA,YAAU,WACR,GAAmB,OAAfF,EACJ,OAAKA,OAOLG,EAAAA,EAAAA,IAAkBH,GAAYI,MAAK,SAAAC,GACd,IAAfA,EAAIC,SACNC,MAAM,oDACLR,EAAgB,CAAC,IAEhBM,EAAIC,OAAS,GACfV,EAAUS,EAEb,KAdCE,MAAM,4BAENR,EAAgB,CAAC,GAepB,GAAE,CAACC,EAAYD,KAGZ,iCAEE,0BACE,kBAAMS,SApCO,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfb,EAAgB,CAAE,MAASY,EAAKE,SAASC,MAAMC,MAAMC,SAErDL,EAAKM,OAEN,EA4BO,WACJ,kBACEC,KAAK,OACLC,KAAK,WAEP,mBAAQD,KAAK,SAAb,yBAGGvB,IACC,wBACGA,EAAOyB,KAAI,SAAAC,GAAK,aACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMjC,GAAxC,mBACG6B,EAAMK,aADT,QACkBL,EAAMF,QAFjBE,EAAME,GADA,QAW5B,C,8LCpEKI,EAAM,mCAGZC,EAAAA,GAAAA,SAAAA,QAFiB,gCAIV,IAAMC,EAAmB,mCAAG,sGACRD,EAAAA,GAAAA,IAAA,qCAAwCD,IADhC,uBACvBG,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKnB5B,EAAiB,mCAAG,WAAOgB,GAAP,yFACNS,EAAAA,GAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CR,IADzC,uBACrBW,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAOC,GAAP,yFACNL,EAAAA,GAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCN,IADhC,uBACrBG,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKjBI,EAAc,mCAAG,WAAOD,GAAP,yFACHL,EAAAA,GAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CN,IAD3C,uBAClBG,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKdC,EAAiB,mCAAG,WAAOH,GAAP,yFACNL,EAAAA,GAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CN,IADxC,uBACrBG,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/api';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get(\"query\" ?? '');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    setSearchParams({ 'query': form.elements.query.value.trim() });\n\n    form.reset();\n \n  };\n  \n  useEffect(() => {\n    if (queryParam === null) return;\n    if (!queryParam) {\n      alert('There are no movies');\n     \n      setSearchParams({});\n        return\n       }\n\n    fetchSearchMovies(queryParam).then(res => {\n      if (res.length === 0) {\n        alert('Sorry, unfortunately we did not find these films');\n         setSearchParams({});\n      }\n      if (res.length > 0) {\n        setMovies(res)\n      }\n    });\n\n\n  }, [queryParam, setSearchParams]);\n\n    return (\n      <>\n        \n        <div>\n          <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n      />\n      <button type=\"submit\">Search</button>\n          </form>\n          </div>\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title ?? movie.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n        </>\n    );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '755b9c6082cc4d5d6e54f37544fe5f24';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrendingMovies = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return data.results;\n};\n\nexport const fetchSearchMovies = async (name) => {\n    const { data } = await axios.get(`search/movie?api_key=${KEY}&query=${name}`)\n    return data.results;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${KEY}`)\n    return data;\n};\n\nexport const fetchMovieCast = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n    return data.cast;\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n    return data.results;\n};\n"],"names":["location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","fetchSearchMovies","then","res","length","alert","onSubmit","e","preventDefault","form","currentTarget","elements","query","value","trim","reset","type","name","map","movie","to","id","state","from","title","KEY","axios","fetchTrendingMovies","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}